@import "tailwindcss";
/*
  ---break---
*/
@custom-variant dark (&:is(.dark *));

@import "tw-animate-css";

@variant dark (&:is(.dark *));

@theme {
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer utilities {
  body {
    font-family: "Manrope", Arial, Helvetica, sans-serif;
  }
}

/* Theme transitions */
@layer base {
  * {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Override for specific elements that shouldn't transition */
  input, textarea, select {
    transition: none;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 217 91% 59%; /* Default blue theme */
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;
    --radius: 0.6rem;
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 217 91% 59%; /* Keep same theme color in dark mode */
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 5% 64.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* TipTap Editor Styles */
@layer components {
  .ProseMirror {
    outline: none !important;
  }
  
  .ProseMirror h1 {
    font-size: 1.875rem !important; /* text-3xl */
    font-weight: 700 !important; /* font-bold */
    line-height: 2.25rem !important;
    margin-top: 1.5rem !important;
    margin-bottom: 1rem !important;
    color: #111827 !important; /* gray-900 */
  }
  
  .ProseMirror h2 {
    font-size: 1.5rem !important; /* text-2xl */
    font-weight: 600 !important; /* font-semibold */
    line-height: 2rem !important;
    margin-top: 1.25rem !important;
    margin-bottom: 0.75rem !important;
    color: #1f2937 !important; /* gray-800 */
  }
  
  .ProseMirror ul.my-bullet-list {
    list-style-type: disc !important;
    margin-left: 1.5rem !important;
    padding-left: 1rem !important;
  }
  
  .ProseMirror ol.my-ordered-list {
    list-style-type: decimal !important;
    margin-left: 1.5rem !important;
    padding-left: 1rem !important;
  }
  
  .ProseMirror li.my-list-item {
    margin-bottom: 0.25rem !important;
    line-height: 1.625 !important;
  }
  
  /* Fallback styles for standard HTML elements */
  .ProseMirror ul {
    list-style-type: disc !important;
    margin-left: 1.5rem !important;
    padding-left: 1rem !important;
  }
  
  .ProseMirror ol {
    list-style-type: decimal !important;
    margin-left: 1.5rem !important;
    padding-left: 1rem !important;
  }
  
  .ProseMirror li {
    margin-bottom: 0.25rem !important;
    line-height: 1.625 !important;
  }
  
  /* Strikethrough, superscript, subscript styles */
  .ProseMirror s {
    text-decoration: line-through !important;
  }
  
  .ProseMirror sup {
    font-size: 0.75em !important;
    vertical-align: super !important;
    line-height: 0 !important;
  }
  
  .ProseMirror sub {
    font-size: 0.75em !important;
    vertical-align: sub !important;
    line-height: 0 !important;
  }
  
  /* Text alignment styles */
  .ProseMirror [style*="text-align: left"] {
    text-align: left !important;
  }
  
  .ProseMirror [style*="text-align: center"] {
    text-align: center !important;
  }
  
  .ProseMirror [style*="text-align: right"] {
    text-align: right !important;
  }
  
  .ProseMirror [style*="text-align: justify"] {
    text-align: justify !important;
  }
  
  /* Color styles */
  .ProseMirror [style*="color:"] {
    /* Colors are handled inline by TipTap */
  }
  
  /* Dark mode support */
  .dark .ProseMirror {
    color: #f9fafb !important; /* gray-50 for general text */
    background-color: transparent !important;
  }
  
  .dark .ProseMirror h1 {
    color: #ffffff !important; /* white for h1 */
  }
  
  .dark .ProseMirror h2 {
    color: #f3f4f6 !important; /* gray-100 for h2 */
  }
  
  .dark .ProseMirror p {
    color: #e5e7eb !important; /* gray-200 for paragraphs */
  }
  
  .dark .ProseMirror strong {
    color: #ffffff !important; /* white for bold text */
  }
  
  .dark .ProseMirror em {
    color: #f3f4f6 !important; /* gray-100 for italic text */
  }
  
  .dark .ProseMirror ul,
  .dark .ProseMirror ol,
  .dark .ProseMirror li {
    color: #e5e7eb !important; /* gray-200 for lists */
  }
  
  .dark .ProseMirror s {
    color: #9ca3af !important; /* gray-400 for strikethrough */
  }
}